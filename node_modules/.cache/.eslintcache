[{"/Users/gimgijin/web/netflixCommunity/src/index.js":"1","/Users/gimgijin/web/netflixCommunity/src/App.js":"2","/Users/gimgijin/web/netflixCommunity/src/reportWebVitals.js":"3","/Users/gimgijin/web/netflixCommunity/src/page/Login.jsx":"4","/Users/gimgijin/web/netflixCommunity/src/page/Intro.jsx":"5","/Users/gimgijin/web/netflixCommunity/src/page/Home.jsx":"6","/Users/gimgijin/web/netflixCommunity/src/page/Signup.jsx":"7","/Users/gimgijin/web/netflixCommunity/src/components/Header.jsx":"8","/Users/gimgijin/web/netflixCommunity/src/components/HomeLayout.jsx":"9","/Users/gimgijin/web/netflixCommunity/src/components/UserBox.jsx":"10","/Users/gimgijin/web/netflixCommunity/src/components/PostDoor.jsx":"11","/Users/gimgijin/web/netflixCommunity/src/components/MainBox.jsx":"12","/Users/gimgijin/web/netflixCommunity/src/components/RightBox.jsx":"13","/Users/gimgijin/web/netflixCommunity/src/components/UserBox0.jsx":"14","/Users/gimgijin/web/netflixCommunity/src/components/UserBox1.jsx":"15","/Users/gimgijin/web/netflixCommunity/src/components/PostBox.jsx":"16","/Users/gimgijin/web/netflixCommunity/src/components/BoardLayout.jsx":"17","/Users/gimgijin/web/netflixCommunity/src/components/ContentBox.jsx":"18","/Users/gimgijin/web/netflixCommunity/src/components/CreateBox.jsx":"19","/Users/gimgijin/web/netflixCommunity/src/api/date.js":"20","/Users/gimgijin/web/netflixCommunity/src/components/BoardBox.jsx":"21","/Users/gimgijin/web/netflixCommunity/src/page/Router.jsx":"22","/Users/gimgijin/web/netflixCommunity/src/api/page_data.js":"23","/Users/gimgijin/web/netflixCommunity/src/components/PostDetail.jsx":"24","/Users/gimgijin/web/netflixCommunity/src/api/user.js":"25","/Users/gimgijin/web/netflixCommunity/src/api/inputfrom.js":"26","/Users/gimgijin/web/netflixCommunity/src/components/CreateComment.jsx":"27","/Users/gimgijin/web/netflixCommunity/src/components/Comment.jsx":"28","/Users/gimgijin/web/netflixCommunity/src/page/Search.jsx":"29","/Users/gimgijin/web/netflixCommunity/src/page/SearchDetail.jsx":"30","/Users/gimgijin/web/netflixCommunity/src/components/SearchInput.jsx":"31"},{"size":500,"mtime":1647589224760,"results":"32","hashOfConfig":"33"},{"size":180,"mtime":1647589224466,"results":"34","hashOfConfig":"33"},{"size":362,"mtime":1647589224763,"results":"35","hashOfConfig":"33"},{"size":2323,"mtime":1647679599196,"results":"36","hashOfConfig":"33"},{"size":1108,"mtime":1647589224760,"results":"37","hashOfConfig":"33"},{"size":258,"mtime":1647589224760,"results":"38","hashOfConfig":"33"},{"size":2217,"mtime":1647703173060,"results":"39","hashOfConfig":"33"},{"size":2384,"mtime":1649749526638,"results":"40","hashOfConfig":"33"},{"size":503,"mtime":1648034877413,"results":"41","hashOfConfig":"33"},{"size":420,"mtime":1647678491276,"results":"42","hashOfConfig":"33"},{"size":1345,"mtime":1647949584218,"results":"43","hashOfConfig":"33"},{"size":374,"mtime":1647589224759,"results":"44","hashOfConfig":"33"},{"size":1679,"mtime":1649746901586,"results":"45","hashOfConfig":"33"},{"size":543,"mtime":1647589224760,"results":"46","hashOfConfig":"33"},{"size":907,"mtime":1647950019506,"results":"47","hashOfConfig":"33"},{"size":382,"mtime":1649678468083,"results":"48","hashOfConfig":"33"},{"size":770,"mtime":1648022289492,"results":"49","hashOfConfig":"33"},{"size":889,"mtime":1649827635461,"results":"50","hashOfConfig":"33"},{"size":1970,"mtime":1648014297801,"results":"51","hashOfConfig":"33"},{"size":330,"mtime":1647589224467,"results":"52","hashOfConfig":"33"},{"size":1284,"mtime":1649678470448,"results":"53","hashOfConfig":"33"},{"size":1321,"mtime":1649758478689,"results":"54","hashOfConfig":"33"},{"size":1231,"mtime":1649678185279,"results":"55","hashOfConfig":"33"},{"size":2884,"mtime":1649749478021,"results":"56","hashOfConfig":"33"},{"size":842,"mtime":1648207019919,"results":"57","hashOfConfig":"33"},{"size":498,"mtime":1648109559611,"results":"58","hashOfConfig":"33"},{"size":1196,"mtime":1648347567253,"results":"59","hashOfConfig":"33"},{"size":498,"mtime":1648212187025,"results":"60","hashOfConfig":"33"},{"size":777,"mtime":1649828970037,"results":"61","hashOfConfig":"33"},{"size":1098,"mtime":1650191135422,"results":"62","hashOfConfig":"33"},{"size":624,"mtime":1649829024589,"results":"63","hashOfConfig":"33"},{"filePath":"64","messages":"65","suppressedMessages":"66","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"67"},"i5kji5",{"filePath":"68","messages":"69","suppressedMessages":"70","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"67"},{"filePath":"71","messages":"72","suppressedMessages":"73","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"67"},{"filePath":"74","messages":"75","suppressedMessages":"76","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"77","usedDeprecatedRules":"78"},{"filePath":"79","messages":"80","suppressedMessages":"81","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"82","usedDeprecatedRules":"67"},{"filePath":"83","messages":"84","suppressedMessages":"85","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"67"},{"filePath":"86","messages":"87","suppressedMessages":"88","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"89"},{"filePath":"90","messages":"91","suppressedMessages":"92","errorCount":0,"fatalErrorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"93","usedDeprecatedRules":"94"},{"filePath":"95","messages":"96","suppressedMessages":"97","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"98"},{"filePath":"99","messages":"100","suppressedMessages":"101","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"102","usedDeprecatedRules":"78"},{"filePath":"103","messages":"104","suppressedMessages":"105","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"106","usedDeprecatedRules":"107"},{"filePath":"108","messages":"109","suppressedMessages":"110","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"67"},{"filePath":"111","messages":"112","suppressedMessages":"113","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"114","usedDeprecatedRules":"94"},{"filePath":"115","messages":"116","suppressedMessages":"117","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"67"},{"filePath":"118","messages":"119","suppressedMessages":"120","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"121","usedDeprecatedRules":"107"},{"filePath":"122","messages":"123","suppressedMessages":"124","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"125"},{"filePath":"126","messages":"127","suppressedMessages":"128","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"129"},{"filePath":"130","messages":"131","suppressedMessages":"132","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"133"},{"filePath":"134","messages":"135","suppressedMessages":"136","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"137","messages":"138","suppressedMessages":"139","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"67"},{"filePath":"140","messages":"141","suppressedMessages":"142","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"143","usedDeprecatedRules":"125"},{"filePath":"144","messages":"145","suppressedMessages":"146","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"94"},{"filePath":"147","messages":"148","suppressedMessages":"149","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"125"},{"filePath":"150","messages":"151","suppressedMessages":"152","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"153","usedDeprecatedRules":"94"},{"filePath":"154","messages":"155","suppressedMessages":"156","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"157"},{"filePath":"158","messages":"159","suppressedMessages":"160","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"161","messages":"162","suppressedMessages":"163","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"164"},{"filePath":"165","messages":"166","suppressedMessages":"167","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"168","usedDeprecatedRules":"169"},{"filePath":"170","messages":"171","suppressedMessages":"172","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"173","usedDeprecatedRules":"133"},{"filePath":"174","messages":"175","suppressedMessages":"176","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"177","messages":"178","suppressedMessages":"179","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"180","usedDeprecatedRules":"133"},"/Users/gimgijin/web/netflixCommunity/src/index.js",[],[],["181","182"],"/Users/gimgijin/web/netflixCommunity/src/App.js",[],[],"/Users/gimgijin/web/netflixCommunity/src/reportWebVitals.js",[],[],"/Users/gimgijin/web/netflixCommunity/src/page/Login.jsx",["183"],[],"import axios from \"axios\";\nimport React, { useState } from \"react\";\nimport { Link, useNavigate } from \"react-router-dom\";\nimport \"./style/Login.css\";\nimport logo from \"../asset/logo.png\";\nimport { setToken } from \"../api/user.js\";\n\nfunction Login() {\n  const navigate = useNavigate();\n  const [email, setEmail] = useState();\n  const [password, setPassword] = useState();\n\n  const onEmailHandler = (e) => {\n    setEmail(e.target.value);\n  };\n  const onPasswordHandler = (e) => {\n    setPassword(e.target.value);\n  };\n  const onSubmitHandler = () => {\n    let data = {\n      email: email,\n      password: password,\n    };\n    axios\n      .post(\"http://localhost:3001/user/login\", data)\n      .then((res) => {\n        // console.log(res.data.acessToken);\n        setToken(res.data.acessToken);\n        // localStorage.setItem(\"acessToken\", res.data.acessToken);\n        // localStorage.setItem(\"refreshToken\", res.data.refreshToken);\n        navigate(\"/home/0\");\n      })\n      .catch((err) => {\n        if (err.response.status === 404) {\n          window.alert(\"가입 정보 없음\");\n        } else if (err.response.status === 409) {\n          window.alert(\"비밀 번호를 다시 입력 해주세요.\");\n          // console.log(err.response.data);\n        } else {\n          window.alert(\"다시 시도해 주세요.\");\n        }\n      });\n  };\n  return (\n    <div className=\"Login\">\n      <div className=\"container\">\n        <div className=\"first-box\">\n          <img className=\"logo\" src={logo}></img>\n          <div className=\"desc\">지금 netflix community를 시작하세요! </div>\n        </div>\n        <div className=\"input-box\">\n          <input\n            type=\"text\"\n            name=\"\"\n            placeholder=\"아이디\"\n            onChange={onEmailHandler}\n          />\n          <input\n            type=\"password\"\n            name=\"\"\n            placeholder=\"*******\"\n            onChange={onPasswordHandler}\n          />\n          <input\n            type=\"button\"\n            value=\"로그인\"\n            className=\"btn\"\n            onClick={onSubmitHandler}\n          />\n        </div>\n        <div className=\"signin-box\">\n          <p>netflix community에 처음이신가요?</p>\n          <Link to=\"/signup\">회원가입</Link>\n        </div>\n      </div>\n    </div>\n  );\n}\n\nexport default Login;\n",["184","185"],"/Users/gimgijin/web/netflixCommunity/src/page/Intro.jsx",["186"],[],"import React from \"react\";\nimport { useNavigate } from \"react-router-dom\";\nimport \"./style/intro.css\";\nimport logo from \"../asset/logo.png\";\n\nfunction Intro() {\n  const navigate = useNavigate();\n\n  const gologin = () => {\n    navigate(\"/login\");\n  };\n\n  const gosignin = () => {\n    navigate(\"/signup\");\n  };\n  return (\n    <div className=\"Intro\">\n      <div className=\"left\">\n        <p>\n          Netflix Community 를 출시하게 되어 기쁩니다! <br /> 사용자는 Netflix\n          Community 에 가입하여 영화 및 시리즈의 후기를 남기고 확인 할 수\n          있습니다. <br /> 지금 바로 가입하여 관한 정보를 얻고 작품에 관하여\n          소통하세요.\n        </p>\n        <div onClick={() => navigate(\"/home/0\")}>Join us</div>\n      </div>\n      <div className=\"right\">\n        <img className=\"logo\" src={logo} />\n        <div className=\"login-btn\" onClick={gologin}>\n          로그인\n        </div>\n        <div className=\"signup-btn\" onClick={gosignin}>\n          회원가입\n        </div>\n      </div>\n    </div>\n  );\n}\n\nexport default Intro;\n","/Users/gimgijin/web/netflixCommunity/src/page/Home.jsx",[],[],"/Users/gimgijin/web/netflixCommunity/src/page/Signup.jsx",["187"],[],"import axios from \"axios\";\nimport React, { useState } from \"react\";\nimport { Link, useNavigate } from \"react-router-dom\";\nimport \"./style/Login.css\";\nimport logo from \"../asset/logo.png\";\n\nfunction Signup() {\n  const navigate = useNavigate();\n  const [email, setEmail] = useState();\n  const [password, setPassword] = useState();\n\n  const onEmailHandler = (e) => {\n    setEmail(e.target.value);\n  };\n  const onPasswordHandler = (e) => {\n    setPassword(e.target.value);\n  };\n  const onSubmitHandler = () => {\n    let data = {\n      email: email,\n      password: password,\n    };\n    axios\n      .post(\"http://localhost:3001/user/signup\", data)\n      .then((res) => {\n        console.log(res.data.message);\n        window.alert(\"회원가입에 성공했습니다. 로그인 페이지로 이동 합니다.\");\n        navigate(\"/login\");\n      })\n      .catch((err) => {\n        if (err.response.status === 409) {\n          window.alert(\"가입 되어 있는 email 입니다.\");\n        } else {\n          window.alert(\"서버오류 다시 시도해 주세요\");\n        }\n      });\n  };\n  return (\n    <div className=\"Login\">\n      <div className=\"container\">\n        <div className=\"first-box\">\n          <img className=\"logo\" src={logo}></img>\n          <div className=\"desc\">지금 netflix community를 시작하세요! </div>\n        </div>\n        <div className=\"input-box\">\n          <input\n            type=\"text\"\n            name=\"\"\n            placeholder=\"아이디\"\n            onChange={onEmailHandler}\n          />\n          <input\n            type=\"password\"\n            name=\"\"\n            placeholder=\"*******\"\n            onChange={onPasswordHandler}\n          />\n          <input\n            type=\"password\"\n            name=\"\"\n            placeholder=\"*******\"\n            onChange={onPasswordHandler}\n          />\n          <input\n            type=\"button\"\n            value=\"로그인\"\n            className=\"btn\"\n            onClick={onSubmitHandler}\n          />\n        </div>\n        <div className=\"signin-box\">\n          <p>netflix community 아이디가 있으신가요?</p>\n          <Link to=\"/login\">로그인</Link>\n        </div>\n      </div>\n    </div>\n  );\n}\n\nexport default Signup;\n","/Users/gimgijin/web/netflixCommunity/src/components/Header.jsx",["188","189","190","191","192"],[],"import React, { useState } from \"react\";\nimport { useNavigate, useParams, Link } from \"react-router-dom\";\nimport \"../page/style/Header.css\";\nimport logo from \"../asset/logo.png\";\nimport search_icon from \"../asset/search_icon.png\";\nfunction Header() {\n  const navigate = useNavigate();\n  const { page } = useParams();\n  const item = useState([\n    { name: \"홈\", id: 0, go: \"0\" },\n    { name: \"시리즈\", id: 1, go: \"1\" },\n    { name: \"영화\", id: 2, go: \"2\" },\n    { name: \"NEW! 요즘 대세 콘텐츠\", id: 3, go: \"3\" },\n  ]);\n\n  const onClickHandler = (e) => {\n    for (let i = 0; i < 4; i++) {\n      document.getElementsByClassName(\"item\")[i].style =\n        \"color:black; border-bottom: none\";\n    }\n\n    e.target.style = \"color: #c62917;; border-bottom: #c62917 3px solid\";\n  };\n  return (\n    <div className=\"Header\">\n      <div\n        className=\"header-left\"\n        onClick={() => {\n          for (let i = 0; i < 4; i++) {\n            document.getElementsByClassName(\"item\")[i].style =\n              \"color:black; border-bottom: none\";\n          }\n\n          document.getElementsByClassName(\"item\")[0].style =\n            \"color: #c62917;; border-bottom: #c62917 3px solid\";\n          navigate(\"/home/0\");\n        }}\n      >\n        <img className=\"logo\" src={logo}></img>\n        <div className=\"name\">\n          Nerflix <br /> Community\n        </div>\n      </div>\n      <div className=\"header-middle\">\n        <div\n          className=\"item item0\"\n          onClick={(e) => {\n            navigate(\"0\");\n            onClickHandler(e);\n          }}\n        >\n          홈\n        </div>\n        <div\n          className=\"item\"\n          onClick={(e) => {\n            navigate(\"1\");\n            onClickHandler(e);\n          }}\n        >\n          시리즈\n        </div>\n        <div\n          className=\"item\"\n          onClick={(e) => {\n            navigate(\"2\");\n            onClickHandler(e);\n          }}\n        >\n          영화\n        </div>\n        <div\n          className=\"item\"\n          onClick={(e) => {\n            navigate(\"3/30\");\n            onClickHandler(e);\n          }}\n        >\n          NEW! 요즘 대세 콘텐츠\n        </div>\n      </div>\n      <div className=\"header-right\">\n        {/* <div></div> */}\n        <img src={search_icon} onClick={() => navigate(\"/home/search\")}></img>\n      </div>\n    </div>\n  );\n}\n\nexport default Header;\n",["193","194"],"/Users/gimgijin/web/netflixCommunity/src/components/HomeLayout.jsx",[],[],["195","196"],"/Users/gimgijin/web/netflixCommunity/src/components/UserBox.jsx",["197"],[],"import React, { useState } from \"react\";\nimport UserBox0 from \"./UserBox0\";\nimport UserBox1 from \"./UserBox1\";\nimport { isLogin } from \"../api/user\";\nimport { logout } from \"../api/user\";\nfunction UserBox() {\n  const [LogedIn, setLogetIn] = useState(isLogin());\n  if (LogedIn === true) {\n    return <UserBox1 onLogout={setLogetIn}></UserBox1>;\n  } else {\n    return <UserBox0></UserBox0>;\n  }\n}\n\nexport default UserBox;\n","/Users/gimgijin/web/netflixCommunity/src/components/PostDoor.jsx",["198","199","200"],[],"import axios from \"axios\";\nimport React, { useEffect, useState } from \"react\";\nimport { useNavigate, useParams } from \"react-router-dom\";\nimport \"../page/style/PostDoor.css\";\n\nfunction PostDoor({ title, boardId }) {\n  const [list, setList] = useState();\n  const navigate = useNavigate();\n  const { page } = useParams();\n\n  useEffect(() => {\n    axios\n      .get(\"http://localhost:3001/main\", {\n        params: { boardId: boardId, page: page },\n      })\n      .then((res) => {\n        // console.log(res.data.list[0]);\n        setList(rendering(res.data.list));\n      })\n      .catch((err) => {\n        console.log(\"에러 발생(postDoor axios)\", err);\n      });\n  }, []);\n\n  const rendering = (arr) => {\n    if (arr.length == 0) return false;\n    return arr.map((item, key) => {\n      return (\n        <div\n          key={key}\n          className=\"post\"\n          onClick={() => navigate(`${boardId}/${item.id}`)}\n        >\n          <div className=\"content\">{item.title}</div>\n          <div className=\"when\">{item.date}</div>\n        </div>\n      );\n    });\n  };\n\n  return (\n    <div className=\"PostDoor\">\n      <div className=\"name\" onClick={() => navigate(`${boardId}`)}>\n        {title}\n        {/* {boardId} */}\n      </div>\n      {list != false ? list : <div className=\"noPost\">no post</div>}\n    </div>\n  );\n}\n\nexport default PostDoor;\n",["201","202"],"/Users/gimgijin/web/netflixCommunity/src/components/MainBox.jsx",[],[],"/Users/gimgijin/web/netflixCommunity/src/components/RightBox.jsx",["203"],[],"import axios from \"axios\";\nimport React, { useEffect, useState } from \"react\";\nimport { useNavigate, useParams } from \"react-router-dom\";\nimport { board_name, bordUrl } from \"../api/page_data\";\nimport \"../page/style/RightBox.css\";\n\nfunction RightBox() {\n  const [best_list, set_best_list] = useState([]);\n  const navigate = useNavigate();\n  const { page, board, post } = useParams();\n\n  useEffect(async () => {\n    await axios\n      .get(\"http://localhost:3001/post/best\")\n      .then((res) => {\n        set_best_list(res.data.best);\n      })\n      .catch((err) => {\n        console.log(\"right->best ddboard err \");\n      });\n  }, [page, board, post]);\n\n  const goBord = (bordId, id) => {\n    let url = bordUrl(bordId, id);\n    navigate(url);\n  };\n  return (\n    <div className=\"RightBox\">\n      <div className=\"best-box\">\n        <div className=\"best-box-name\">최근 게시물</div>\n        {best_list.map((item, idx) => {\n          return (\n            <div\n              className=\"best-content-box\"\n              key={idx}\n              onClick={() => goBord(item.board_id, item.id)}\n            >\n              <div className=\"best-post-top\">{item.title}</div>\n              <div className=\"best-post-middle\">{item.content}</div>\n              <div className=\"best-post-bottom\">\n                <div className=\"best-board\">{board_name(item.board_id)}</div>\n                <div className=\"best-like\">like {item.likes}</div>\n                <div className=\"best-comment\">comment {item.total_comment}</div>\n                <div className=\"clear\"></div>\n              </div>\n            </div>\n          );\n        })}\n      </div>\n    </div>\n  );\n}\n\nexport default RightBox;\n","/Users/gimgijin/web/netflixCommunity/src/components/UserBox0.jsx",[],[],"/Users/gimgijin/web/netflixCommunity/src/components/UserBox1.jsx",["204","205"],[],"import React, { useEffect, useState } from \"react\";\nimport \"../page/style/UserBox1.css\";\nimport { getUser, logout, getToken } from \"../api/user\";\nimport logo from \"../asset/profile.png\";\nfunction UserBox1({ onLogout }) {\n  const [email, setEmail] = useState(\"\");\n  useEffect(() => {\n    getUser()\n      .then((user) => {\n        console.log(\"get user then function\", user.email);\n        setEmail(user.email);\n      })\n      .catch((err) => console.log(\"에러\", err));\n  }, []);\n\n  return (\n    <div className=\"UserBox1\">\n      <div className=\"proflie\">\n        <img src={logo} className=\"photo\"></img>\n        <div className=\"name\">{email}</div>\n      </div>\n      <div className=\"logout\">\n        <button\n          onClick={() => {\n            logout();\n            onLogout(false);\n          }}\n        >\n          로그아웃\n        </button>\n      </div>\n    </div>\n  );\n}\n\nexport default UserBox1;\n","/Users/gimgijin/web/netflixCommunity/src/components/PostBox.jsx",[],[],["206","207"],"/Users/gimgijin/web/netflixCommunity/src/components/BoardLayout.jsx",[],[],["208","209"],"/Users/gimgijin/web/netflixCommunity/src/components/ContentBox.jsx",[],[],["210","211"],"/Users/gimgijin/web/netflixCommunity/src/components/CreateBox.jsx",[],[],"/Users/gimgijin/web/netflixCommunity/src/api/date.js",[],[],"/Users/gimgijin/web/netflixCommunity/src/components/BoardBox.jsx",["212","213"],[],"import React, { useEffect, useState } from \"react\";\nimport ContentBox from \"./ContentBox\";\nimport CreateBox from \"./CreateBox\";\nimport \"../page/style/BoardBox.css\";\nimport axios from \"axios\";\nimport { useParams } from \"react-router-dom\";\n\nfunction BoardBox() {\n  const { board } = useParams();\n  const [inputToggle, SetInputToggle] = useState(false);\n  const [list, setList] = useState(null);\n  useEffect(async () => {\n    const data = await axios\n      .get(\"http://localhost:3001/board\", {\n        params: { boardId: board },\n      })\n      .then((res) => {\n        return res.data.list;\n      })\n      .catch((err) => {\n        console.log(err);\n      });\n    console.log(data);\n\n    setList(\n      data.map((item, key) => {\n        return <ContentBox key={item.id} data={item}></ContentBox>;\n      })\n    );\n  }, []);\n\n  const inputCancel = () => {\n    SetInputToggle(false);\n  };\n  return (\n    <>\n      {inputToggle === false ? (\n        <div\n          className=\"input-basic\"\n          onClick={() => {\n            SetInputToggle(true);\n          }}\n        >\n          새글을 작성해주세요\n        </div>\n      ) : (\n        <CreateBox cancel={inputCancel}></CreateBox>\n      )}\n      <div className=\"content-box\">{list}</div>\n    </>\n  );\n}\n\nexport default BoardBox;\n","/Users/gimgijin/web/netflixCommunity/src/page/Router.jsx",[],[],"/Users/gimgijin/web/netflixCommunity/src/api/page_data.js",[],[],"/Users/gimgijin/web/netflixCommunity/src/components/PostDetail.jsx",["214","215","216"],[],"import React, { useEffect, useState } from \"react\";\nimport \"../page/style/PostDetail.css\";\nimport logo from \"../asset/profile.png\";\nimport { useParams } from \"react-router-dom\";\nimport axios from \"axios\";\nimport CreateComment from \"./CreateComment\";\nimport Comment from \"./Comment\";\n\nfunction PostDetail() {\n  const { post } = useParams();\n  const [postData, setPostData] = useState(\"\");\n  const [commentData, setCommentData] = useState();\n  const [LikeChange, setLikeChange] = useState(1);\n  const [Like, setLike] = useState();\n\n  useEffect(() => {\n    load_data();\n    setLikeChange(1);\n  }, [post]);\n\n  const load_data = () => {\n    axios\n      .get(\"http://localhost:3001/post\", {\n        params: { post: post },\n      })\n      .then((res) => {\n        setPostData(res.data.data);\n        setLike(res.data.data.likes);\n        console.log(\"Like\", res.data.data.likes);\n        return res.data.data.comments;\n      })\n      .catch((err) => {\n        console.log(err.response);\n      })\n      .then((data) => {\n        return data.map((item) => {\n          return <Comment key={item.id} data={item}></Comment>;\n        });\n      })\n      .then((list) => {\n        console.log(list);\n        setCommentData(list);\n      });\n  };\n\n  const likeHandler = async () => {\n    console.log(\"click like btn\");\n    if (LikeChange == 1) {\n      await axios.post(\"http://localhost:3001/post/like\", {\n        like_change: LikeChange,\n        id: postData.id,\n      });\n      setLikeChange(0);\n      setLike(Like + 1);\n    } else {\n      alert(\"이미 좋아요를 누르셨습니다.\");\n    }\n  };\n\n  const list = commentData;\n\n  return (\n    <div className=\"PostDetail\">\n      <div className=\"body-container\">\n        <div className=\"post-top\">\n          <img src={logo} className=\"user-photo\" />\n          <div className=\"info-box\">\n            <div className=\"user-id\">{postData.writer}</div>\n            <div className=\"time\">{postData.date}</div>\n          </div>\n        </div>\n        <div className=\"detail-content\">\n          <div className=\"detail-title\">{postData.title}</div>\n          <div className=\"detail-body\">{postData.content}</div>\n          <div className=\"detail-etc\">\n            <div className=\"detail-like\">like {Like}</div>\n            <div className=\"detail-comment\">\n              comment {postData.total_comment}\n            </div>\n          </div>\n        </div>\n        <div className=\"like-btn\" onClick={likeHandler}>\n          공감\n        </div>\n      </div>\n\n      {list}\n\n      <CreateComment\n        click={async (new_data, comment_id) => {\n          load_data();\n          // setCommentData([\n          //   ...commentData,\n          //   <Comment key={comment_id} data={new_data}></Comment>,\n          // ]);\n          console.log(commentData);\n        }}\n        postId={postData.id}\n      ></CreateComment>\n    </div>\n  );\n}\n\nexport default PostDetail;\n","/Users/gimgijin/web/netflixCommunity/src/api/user.js",[],[],["217","218"],"/Users/gimgijin/web/netflixCommunity/src/api/inputfrom.js",["219"],[],"/Users/gimgijin/web/netflixCommunity/src/components/CreateComment.jsx",[],[],["220","221"],"/Users/gimgijin/web/netflixCommunity/src/components/Comment.jsx",["222","223"],[],"import React from \"react\";\nimport { date } from \"../api/date\";\nimport logo from \"../asset/profile.png\";\n\nfunction Comment({ data }) {\n  return (\n    <div className=\"post-comment\">\n      <div className=\"comment-top\">\n        <img className=\"comment-img\" src={logo} />\n        <div className=\"comment-writer\">{data.writer}</div>\n      </div>\n      <div className=\"commnet-middle\">{data.comment}</div>\n      <div className=\"comment-bottom\">{data.date}</div>\n    </div>\n  );\n}\n\nexport default Comment;\n",["224","225"],"/Users/gimgijin/web/netflixCommunity/src/page/Search.jsx",["226"],[],"import React, { useState } from \"react\";\nimport \"./style/Search.css\";\nimport s_logo from \"../asset/search_icon.png\";\nimport { useNavigate } from \"react-router-dom\";\nfunction Search() {\n  const navigate = useNavigate();\n  const [inputT, setInuptT] = useState(\"\");\n\n  return (\n    <div className=\"Search\">\n      <div className=\"Container\">\n        <div className=\"logo\">Netflix Community</div>\n        <div className=\"inputbox\">\n          <input\n            type=\"text\"\n            name=\"text\"\n            onChange={(e) => setInuptT(e.target.value)}\n          />\n          <img\n            className=\"search-submit\"\n            src={s_logo}\n            onClick={() => navigate(`${inputT}`)}\n          ></img>\n        </div>\n      </div>\n    </div>\n  );\n}\n\nexport default Search;\n","/Users/gimgijin/web/netflixCommunity/src/page/SearchDetail.jsx",["227","228"],[],"/Users/gimgijin/web/netflixCommunity/src/components/SearchInput.jsx",["229"],[],"import React, { useState } from \"react\";\nimport { useNavigate } from \"react-router-dom\";\nimport s_logo from \"../asset/search_icon.png\";\nimport \"../page/style/SearchInput.css\";\nfunction SearchInput() {\n  const navigate = useNavigate();\n  const [inputT, setInuptT] = useState(\"\");\n  return (\n    <div className=\"SearchInput\">\n      <input\n        type=\"text\"\n        name=\"text\"\n        onChange={(e) => setInuptT(e.target.value)}\n      />\n      <img\n        className=\"search-submit\"\n        src={s_logo}\n        onClick={() => navigate(`/home/search/${inputT}`)}\n      ></img>\n    </div>\n  );\n}\n\nexport default SearchInput;\n",{"ruleId":"230","replacedBy":"231"},{"ruleId":"232","replacedBy":"233"},{"ruleId":"234","severity":1,"message":"235","line":48,"column":11,"nodeType":"236","endLine":48,"endColumn":44},{"ruleId":"230","replacedBy":"237"},{"ruleId":"232","replacedBy":"238"},{"ruleId":"234","severity":1,"message":"235","line":28,"column":9,"nodeType":"236","endLine":28,"endColumn":44},{"ruleId":"234","severity":1,"message":"235","line":42,"column":11,"nodeType":"236","endLine":42,"endColumn":44},{"ruleId":"239","severity":1,"message":"240","line":2,"column":34,"nodeType":"241","messageId":"242","endLine":2,"endColumn":38},{"ruleId":"239","severity":1,"message":"243","line":8,"column":11,"nodeType":"241","messageId":"242","endLine":8,"endColumn":15},{"ruleId":"239","severity":1,"message":"244","line":9,"column":9,"nodeType":"241","messageId":"242","endLine":9,"endColumn":13},{"ruleId":"234","severity":1,"message":"235","line":39,"column":9,"nodeType":"236","endLine":39,"endColumn":42},{"ruleId":"234","severity":1,"message":"235","line":84,"column":9,"nodeType":"236","endLine":84,"endColumn":73},{"ruleId":"230","replacedBy":"245"},{"ruleId":"232","replacedBy":"246"},{"ruleId":"230","replacedBy":"247"},{"ruleId":"232","replacedBy":"248"},{"ruleId":"239","severity":1,"message":"249","line":5,"column":10,"nodeType":"241","messageId":"242","endLine":5,"endColumn":16},{"ruleId":"250","severity":1,"message":"251","line":23,"column":6,"nodeType":"252","endLine":23,"endColumn":8,"suggestions":"253"},{"ruleId":"254","severity":1,"message":"255","line":26,"column":20,"nodeType":"256","messageId":"257","endLine":26,"endColumn":22},{"ruleId":"254","severity":1,"message":"258","line":47,"column":13,"nodeType":"256","messageId":"257","endLine":47,"endColumn":15},{"ruleId":"230","replacedBy":"259"},{"ruleId":"232","replacedBy":"260"},{"ruleId":"250","severity":1,"message":"261","line":12,"column":13,"nodeType":"262","endLine":21,"endColumn":4},{"ruleId":"239","severity":1,"message":"263","line":3,"column":27,"nodeType":"241","messageId":"242","endLine":3,"endColumn":35},{"ruleId":"234","severity":1,"message":"235","line":19,"column":9,"nodeType":"236","endLine":19,"endColumn":43},{"ruleId":"230","replacedBy":"264"},{"ruleId":"232","replacedBy":"265"},{"ruleId":"230","replacedBy":"266"},{"ruleId":"232","replacedBy":"267"},{"ruleId":"230","replacedBy":"268"},{"ruleId":"232","replacedBy":"269"},{"ruleId":"250","severity":1,"message":"261","line":12,"column":13,"nodeType":"262","endLine":30,"endColumn":4},{"ruleId":"250","severity":1,"message":"270","line":30,"column":6,"nodeType":"252","endLine":30,"endColumn":8,"suggestions":"271"},{"ruleId":"250","severity":1,"message":"272","line":19,"column":6,"nodeType":"252","endLine":19,"endColumn":12,"suggestions":"273"},{"ruleId":"254","severity":1,"message":"255","line":48,"column":20,"nodeType":"256","messageId":"257","endLine":48,"endColumn":22},{"ruleId":"234","severity":1,"message":"235","line":66,"column":11,"nodeType":"236","endLine":66,"endColumn":52},{"ruleId":"230","replacedBy":"274"},{"ruleId":"232","replacedBy":"275"},{"ruleId":"276","severity":1,"message":"277","line":16,"column":15,"nodeType":"278","messageId":"279","endLine":16,"endColumn":26},{"ruleId":"230","replacedBy":"280"},{"ruleId":"232","replacedBy":"281"},{"ruleId":"239","severity":1,"message":"282","line":2,"column":10,"nodeType":"241","messageId":"242","endLine":2,"endColumn":14},{"ruleId":"234","severity":1,"message":"235","line":9,"column":9,"nodeType":"236","endLine":9,"endColumn":51},{"ruleId":"230","replacedBy":"283"},{"ruleId":"232","replacedBy":"284"},{"ruleId":"234","severity":1,"message":"235","line":19,"column":11,"nodeType":"236","endLine":23,"endColumn":12},{"ruleId":"250","severity":1,"message":"285","line":28,"column":6,"nodeType":"252","endLine":28,"endColumn":13,"suggestions":"286"},{"ruleId":"254","severity":1,"message":"255","line":33,"column":22,"nodeType":"256","messageId":"257","endLine":33,"endColumn":24},{"ruleId":"234","severity":1,"message":"235","line":15,"column":7,"nodeType":"236","endLine":19,"endColumn":8},"no-native-reassign",["287"],"no-negated-in-lhs",["288"],"jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","JSXOpeningElement",["287"],["288"],"no-unused-vars","'Link' is defined but never used.","Identifier","unusedVar","'page' is assigned a value but never used.","'item' is assigned a value but never used.",["287"],["288"],["287"],["288"],"'logout' is defined but never used.","react-hooks/exhaustive-deps","React Hook useEffect has missing dependencies: 'boardId', 'page', and 'rendering'. Either include them or remove the dependency array.","ArrayExpression",["289"],"eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","unexpected","Expected '!==' and instead saw '!='.",["287"],["288"],"Effect callbacks are synchronous to prevent race conditions. Put the async function inside:\n\nuseEffect(() => {\n  async function fetchData() {\n    // You can await here\n    const response = await MyAPI.getData(someId);\n    // ...\n  }\n  fetchData();\n}, [someId]); // Or [] if effect doesn't need props or state\n\nLearn more about data fetching with Hooks: https://reactjs.org/link/hooks-data-fetching","ArrowFunctionExpression","'getToken' is defined but never used.",["287"],["288"],["287"],["288"],["287"],["288"],"React Hook useEffect has a missing dependency: 'board'. Either include it or remove the dependency array.",["290"],"React Hook useEffect has a missing dependency: 'load_data'. Either include it or remove the dependency array.",["291"],["287"],["288"],"no-array-constructor","The array literal notation [] is preferable.","NewExpression","preferLiteral",["287"],["288"],"'date' is defined but never used.",["287"],["288"],"React Hook useEffect has a missing dependency: 'result'. Either include it or remove the dependency array.",["292"],"no-global-assign","no-unsafe-negation",{"desc":"293","fix":"294"},{"desc":"295","fix":"296"},{"desc":"297","fix":"298"},{"desc":"299","fix":"300"},"Update the dependencies array to be: [boardId, page, rendering]",{"range":"301","text":"302"},"Update the dependencies array to be: [board]",{"range":"303","text":"304"},"Update the dependencies array to be: [load_data, post]",{"range":"305","text":"306"},"Update the dependencies array to be: [input, result]",{"range":"307","text":"308"},[660,662],"[boardId, page, rendering]",[817,819],"[board]",[594,600],"[load_data, post]",[659,666],"[input, result]"]