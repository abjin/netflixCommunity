{"ast":null,"code":"var _jsxFileName = \"/Users/gimgijin/web/netflixCommunity/src/components/CreateComment.jsx\",\n    _s = $RefreshSig$();\n\nimport axios from \"axios\";\nimport React, { useState } from \"react\";\nimport { date } from \"../api/date\";\nimport { getUser } from \"../api/user\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction CreateComment(_ref) {\n  _s();\n\n  let {\n    click,\n    postId\n  } = _ref;\n  const [comment, setComment] = useState();\n\n  const onClickHandler = async () => {\n    const {\n      email: writer\n    } = await getUser();\n    const when = date();\n    const data = {\n      writer,\n      comment,\n      postId,\n      date: when\n    };\n    axios.post(\"http://localhost:3001/post/comment\", data).then(res => console.log(res.data)).catch(err => console.log(err)).then(click(data));\n  };\n\n  const onChangeHandler = e => {\n    setComment(e.target.value);\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"comment-create\",\n    children: [/*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"text\",\n      name: \"comment\",\n      className: \"comment-input\",\n      placeholder: \"\\uB313\\uAE00\\uC744 \\uC785\\uB825\\uD558\\uC138\\uC694.\",\n      onChange: e => onChangeHandler(e)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"comment-submit\",\n      onClick: () => {\n        onClickHandler();\n      },\n      children: \"\\uC81C\\uCD9C\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 30,\n    columnNumber: 5\n  }, this);\n}\n\n_s(CreateComment, \"iKZALZJ7kpJZJxVo4TkfW9SNars=\");\n\n_c = CreateComment;\nexport default CreateComment;\n\nvar _c;\n\n$RefreshReg$(_c, \"CreateComment\");","map":{"version":3,"sources":["/Users/gimgijin/web/netflixCommunity/src/components/CreateComment.jsx"],"names":["axios","React","useState","date","getUser","CreateComment","click","postId","comment","setComment","onClickHandler","email","writer","when","data","post","then","res","console","log","catch","err","onChangeHandler","e","target","value"],"mappings":";;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;AACA,SAASC,IAAT,QAAqB,aAArB;AACA,SAASC,OAAT,QAAwB,aAAxB;;;AAEA,SAASC,aAAT,OAA0C;AAAA;;AAAA,MAAnB;AAAEC,IAAAA,KAAF;AAASC,IAAAA;AAAT,GAAmB;AACxC,QAAM,CAACC,OAAD,EAAUC,UAAV,IAAwBP,QAAQ,EAAtC;;AAEA,QAAMQ,cAAc,GAAG,YAAY;AACjC,UAAM;AAAEC,MAAAA,KAAK,EAAEC;AAAT,QAAoB,MAAMR,OAAO,EAAvC;AACA,UAAMS,IAAI,GAAGV,IAAI,EAAjB;AACA,UAAMW,IAAI,GAAG;AACXF,MAAAA,MADW;AAEXJ,MAAAA,OAFW;AAGXD,MAAAA,MAHW;AAIXJ,MAAAA,IAAI,EAAEU;AAJK,KAAb;AAMAb,IAAAA,KAAK,CACFe,IADH,CACQ,oCADR,EAC8CD,IAD9C,EAEGE,IAFH,CAESC,GAAD,IAASC,OAAO,CAACC,GAAR,CAAYF,GAAG,CAACH,IAAhB,CAFjB,EAGGM,KAHH,CAGUC,GAAD,IAASH,OAAO,CAACC,GAAR,CAAYE,GAAZ,CAHlB,EAIGL,IAJH,CAIQV,KAAK,CAACQ,IAAD,CAJb;AAKD,GAdD;;AAgBA,QAAMQ,eAAe,GAAIC,CAAD,IAAO;AAC7Bd,IAAAA,UAAU,CAACc,CAAC,CAACC,MAAF,CAASC,KAAV,CAAV;AACD,GAFD;;AAIA,sBACE;AAAK,IAAA,SAAS,EAAC,gBAAf;AAAA,4BACE;AACE,MAAA,IAAI,EAAC,MADP;AAEE,MAAA,IAAI,EAAC,SAFP;AAGE,MAAA,SAAS,EAAC,eAHZ;AAIE,MAAA,WAAW,EAAC,oDAJd;AAKE,MAAA,QAAQ,EAAGF,CAAD,IAAOD,eAAe,CAACC,CAAD;AALlC;AAAA;AAAA;AAAA;AAAA,YADF,eAQE;AACE,MAAA,SAAS,EAAC,gBADZ;AAEE,MAAA,OAAO,EAAE,MAAM;AACbb,QAAAA,cAAc;AACf,OAJH;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YARF;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AAmBD;;GA1CQL,a;;KAAAA,a;AA4CT,eAAeA,aAAf","sourcesContent":["import axios from \"axios\";\nimport React, { useState } from \"react\";\nimport { date } from \"../api/date\";\nimport { getUser } from \"../api/user\";\n\nfunction CreateComment({ click, postId }) {\n  const [comment, setComment] = useState();\n\n  const onClickHandler = async () => {\n    const { email: writer } = await getUser();\n    const when = date();\n    const data = {\n      writer,\n      comment,\n      postId,\n      date: when,\n    };\n    axios\n      .post(\"http://localhost:3001/post/comment\", data)\n      .then((res) => console.log(res.data))\n      .catch((err) => console.log(err))\n      .then(click(data));\n  };\n\n  const onChangeHandler = (e) => {\n    setComment(e.target.value);\n  };\n\n  return (\n    <div className=\"comment-create\">\n      <input\n        type=\"text\"\n        name=\"comment\"\n        className=\"comment-input\"\n        placeholder=\"댓글을 입력하세요.\"\n        onChange={(e) => onChangeHandler(e)}\n      />\n      <div\n        className=\"comment-submit\"\n        onClick={() => {\n          onClickHandler();\n        }}\n      >\n        제출\n      </div>\n    </div>\n  );\n}\n\nexport default CreateComment;\n"]},"metadata":{},"sourceType":"module"}