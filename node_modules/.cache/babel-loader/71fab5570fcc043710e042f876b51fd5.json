{"ast":null,"code":"var _jsxFileName = \"/Users/gimgijin/web/netflixCommunity/src/components/PostDetail.jsx\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect, useState } from \"react\";\nimport \"../page/style/PostDetail.css\";\nimport logo from \"../asset/profile.png\";\nimport { useParams } from \"react-router-dom\";\nimport axios from \"axios\";\nimport CreateComment from \"./CreateComment\";\nimport Comment from \"./Comment\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction PostDetail() {\n  _s();\n\n  const {\n    post\n  } = useParams();\n  const [postData, setPostData] = useState(\"\");\n  const [commentData, setCommentData] = useState();\n  const [LikeChange, setLikeChange] = useState(1);\n  const [Like, setLike] = useState();\n  useEffect(() => {\n    load_data();\n    setLikeChange(1);\n  }, [post]);\n\n  const load_data = () => {\n    axios.get(\"http://localhost:3001/post\", {\n      params: {\n        post: post\n      }\n    }).then(res => {\n      setPostData(res.data.data);\n      setLike(res.data.data.likes);\n      console.log(\"Like\", res.data.data.likes);\n      return res.data.data.comments;\n    }).catch(err => {\n      console.log(err.response);\n    }).then(data => {\n      return data.map(item => {\n        return /*#__PURE__*/_jsxDEV(Comment, {\n          data: item\n        }, item.id, false, {\n          fileName: _jsxFileName,\n          lineNumber: 37,\n          columnNumber: 18\n        }, this);\n      });\n    }).then(list => {\n      console.log(list);\n      setCommentData(list);\n    });\n  };\n\n  const likeHandler = async () => {\n    console.log(\"click like btn\");\n\n    if (LikeChange == 1) {\n      await axios.post(\"http://localhost:3001/post/like\", {\n        like_change: LikeChange,\n        id: postData.id\n      });\n      setLikeChange(0);\n      setLike(Like + 1);\n    } else {\n      alert(\"이미 좋아요를 누르셨습니다.\");\n    }\n  };\n\n  const list = commentData;\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"PostDetail\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"body-container\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"post-top\",\n        children: [/*#__PURE__*/_jsxDEV(\"img\", {\n          src: logo,\n          className: \"user-photo\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 66,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"info-box\",\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"user-id\",\n            children: postData.writer\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 68,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"time\",\n            children: postData.date\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 69,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 67,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 65,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"detail-content\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"detail-title\",\n          children: postData.title\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 73,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"detail-body\",\n          children: postData.content\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 74,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"detail-etc\",\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"detail-like\",\n            children: [\"like \", Like]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 76,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"detail-comment\",\n            children: [\"comment \", postData.total_comment]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 77,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 75,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 72,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"like-btn\",\n        onClick: likeHandler,\n        children: \"\\uACF5\\uAC10\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 82,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 64,\n      columnNumber: 7\n    }, this), list, /*#__PURE__*/_jsxDEV(CreateComment, {\n      click: async (new_data, comment_id) => {\n        // load_data();\n        setCommentData([...commentData, /*#__PURE__*/_jsxDEV(Comment, {\n          data: new_data\n        }, comment_id, false, {\n          fileName: _jsxFileName,\n          lineNumber: 94,\n          columnNumber: 13\n        }, this)]);\n        console.log(commentData);\n      },\n      postId: postData.id\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 89,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 63,\n    columnNumber: 5\n  }, this);\n}\n\n_s(PostDetail, \"nAlEdifUwPpPNG6DoZoDHOK9DZM=\", false, function () {\n  return [useParams];\n});\n\n_c = PostDetail;\nexport default PostDetail;\n\nvar _c;\n\n$RefreshReg$(_c, \"PostDetail\");","map":{"version":3,"sources":["/Users/gimgijin/web/netflixCommunity/src/components/PostDetail.jsx"],"names":["React","useEffect","useState","logo","useParams","axios","CreateComment","Comment","PostDetail","post","postData","setPostData","commentData","setCommentData","LikeChange","setLikeChange","Like","setLike","load_data","get","params","then","res","data","likes","console","log","comments","catch","err","response","map","item","id","list","likeHandler","like_change","alert","writer","date","title","content","total_comment","new_data","comment_id"],"mappings":"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","sourcesContent":["import React, { useEffect, useState } from \"react\";\nimport \"../page/style/PostDetail.css\";\nimport logo from \"../asset/profile.png\";\nimport { useParams } from \"react-router-dom\";\nimport axios from \"axios\";\nimport CreateComment from \"./CreateComment\";\nimport Comment from \"./Comment\";\n\nfunction PostDetail() {\n  const { post } = useParams();\n  const [postData, setPostData] = useState(\"\");\n  const [commentData, setCommentData] = useState();\n  const [LikeChange, setLikeChange] = useState(1);\n  const [Like, setLike] = useState();\n\n  useEffect(() => {\n    load_data();\n    setLikeChange(1);\n  }, [post]);\n\n  const load_data = () => {\n    axios\n      .get(\"http://localhost:3001/post\", {\n        params: { post: post },\n      })\n      .then((res) => {\n        setPostData(res.data.data);\n        setLike(res.data.data.likes);\n        console.log(\"Like\", res.data.data.likes);\n        return res.data.data.comments;\n      })\n      .catch((err) => {\n        console.log(err.response);\n      })\n      .then((data) => {\n        return data.map((item) => {\n          return <Comment key={item.id} data={item}></Comment>;\n        });\n      })\n      .then((list) => {\n        console.log(list);\n        setCommentData(list);\n      });\n  };\n\n  const likeHandler = async () => {\n    console.log(\"click like btn\");\n    if (LikeChange == 1) {\n      await axios.post(\"http://localhost:3001/post/like\", {\n        like_change: LikeChange,\n        id: postData.id,\n      });\n      setLikeChange(0);\n      setLike(Like + 1);\n    } else {\n      alert(\"이미 좋아요를 누르셨습니다.\");\n    }\n  };\n\n  const list = commentData;\n\n  return (\n    <div className=\"PostDetail\">\n      <div className=\"body-container\">\n        <div className=\"post-top\">\n          <img src={logo} className=\"user-photo\" />\n          <div className=\"info-box\">\n            <div className=\"user-id\">{postData.writer}</div>\n            <div className=\"time\">{postData.date}</div>\n          </div>\n        </div>\n        <div className=\"detail-content\">\n          <div className=\"detail-title\">{postData.title}</div>\n          <div className=\"detail-body\">{postData.content}</div>\n          <div className=\"detail-etc\">\n            <div className=\"detail-like\">like {Like}</div>\n            <div className=\"detail-comment\">\n              comment {postData.total_comment}\n            </div>\n          </div>\n        </div>\n        <div className=\"like-btn\" onClick={likeHandler}>\n          공감\n        </div>\n      </div>\n\n      {list}\n\n      <CreateComment\n        click={async (new_data, comment_id) => {\n          // load_data();\n          setCommentData([\n            ...commentData,\n            <Comment key={comment_id} data={new_data}></Comment>,\n          ]);\n          console.log(commentData);\n        }}\n        postId={postData.id}\n      ></CreateComment>\n    </div>\n  );\n}\n\nexport default PostDetail;\n"]},"metadata":{},"sourceType":"module"}